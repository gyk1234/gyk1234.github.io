[{"title":"java面向对象总结","date":"2019-11-06T01:52:55.117Z","path":"2019/11/06/java面向对象总结/","text":"java面向对象 1第二章 类和对象 1、面向对象的概念：面向对象是把一个项目，一件事情，从头到尾一步一步执行，直到结束。2、类的创建public class 类名{}File——&gt;new –&gt;class –&gt;类名3、创建对象类名 对象名=new 类名();对象名.方法名(); 对象名.属性4、构造方法方法名和类名相同，无返回值public class 类名{ public 类名(){}//主要的作用是初始化操作}5、构造方法的重载在同一个类中，方法名相同，参数个数，顺序，类型不同的构造方法public class 类名{ public 类名(String Name，int age){}}6、构造方法的执行（1）、new 类名();—&gt;执行（2）、Super();—&gt;执行父类7、static静态修饰符可以修饰属性，方法，代码块类名.属性 类名.方法名8、Java内存(gc（垃圾回收机制）) 1第三章 面向对象三大特征--封装 1、封装的概念：把一个对象的属性私有化，同是提供一些可以被外界访问属性的方法2、封装的步骤（1）、把属性私有化（private）（2）、对这些属性设置get和set方法（3）、set赋值，get取值3、封装的作用避免一些不合乎常理的操作4、修饰符public （公共的）在一个项目中都可以访问，权限最高private（私有的）只能在本类中进行访问protected（受保护的）在同一个包中进行访问 在继承中子类可以访问父类defauit（默认的）同一个类，同一个包能访问 1第四章 面向对象三大特征--继承 1、继承的概念父子之间的关系2、继承的关键字：extends3、继承的语法public class 类名 extends 父类{}4、继承的说明（1）、一个父类可以有多个子类，但一个子类只能有父类（2）、子类继承了父类的所有属性和方法，但是只能调用非private属性和方法（3）、可以多层继承5、继承使用在子类中可以直接调用父类的非private属性和方法可以用super.方法 super.属性6、父类构造方法的调用：super();（1）、调用父类的构造方法必须在子类中调用（2）、必须在子类的构造方法的第一行代码7、重写@Ovrride（1）、必须继承（2）、方法名一致，参数个数，顺序，类型全部一致 1第五章 面向对象（多态） 1.多态的概念 2.多态的必要条件 （1）继承 （2）重写 （3）父类引用指向子类对象（向上转型） 3.多态的使用 public class Father{ public void cooking(){ System.out.println(“米饭”); } } public class Son extends Father{ @Override public void cooking(){ System.out.println(“熬粥”); } } public class Test { public static void main(String[] args) { Father son=new Son(); son.cooking(); } } 4.向下转型 Son son=(Son)father; 1第六章 抽象 1.抽象的概念 2.抽象的关键字 abstract 可以修饰类，可以修饰方法 3.抽象的用法 //抽象类 public abstract class 类名{ //抽象方法没有方法体 public abstract void 方法名(); } //当父类是抽象类的时候，子类必须重写父类里面的抽象方法 4.final修饰符：最终的 修饰变量，修饰方法，修饰类 1.当修饰变量时，变量转换成常量，常量的值不能改变 final int a=18;//a=18;不能改变,必须给一个初始值 2.当修饰方法时，该方法不能被重写 3.当修饰类时，该类不能被继承 1第七章 接口 1.接口的概念 2.接口的关键字 interface 3.接口的语法 public interface 接口名{} File—&gt;new—&gt;interface//创建接口 4.接口的用法 实现接口的关键字 implements public interface 接口名{ //接口是纯抽象类 //接口里面的方法都是抽象方法 void setData(); } public class Play implements 接口名{ @Override void setData(){ } } public class Test { public static void main(String[] args) { Play play=new Play(); play.setData(); } } 注意接口可以进行多继承 public interface 接口名 extends 接口名，接口名{} 一般用法 public class 类名 extends 父类 implements 接口，接口{} 1第八章 集合框架 1.ArrayList 用法： ArrayList list=new ArrayList(); list.add();//添加数据 list.get();//获取数据 2.Map 用法： Map map=new HasMap(); map.put(key,value);//key不能重复 map.get(key);//获取key对象的value 3.泛型 ArrayList list=new ArrayList&gt;(); Map&lt;String,String&gt; map=new HasMap&lt;String,String&gt;(); ArrayList&lt;Map&lt;String,String&gt;&gt; list=new ArrayList&gt;&lt;Map&lt;String,String&gt;&gt;();"},{"title":"Hello World","date":"2019-11-05T02:17:07.954Z","path":"2019/11/05/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]